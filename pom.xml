<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.license</groupId>
	<artifactId>parent-module</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>parent-module-demo</name>
	<description>parent-module-demo</description>
	<properties>
		<java.version>21</java.version>
		<spring-modulith.version>1.1.2</spring-modulith.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.modulith</groupId>
			<artifactId>spring-modulith-starter-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.modulith</groupId>
			<artifactId>spring-modulith-starter-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.3.0</version>
		</dependency>


		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.5.5.Final</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.modulith</groupId>
			<artifactId>spring-modulith-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.modulith</groupId>
				<artifactId>spring-modulith-bom</artifactId>
				<version>${spring-modulith.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>parent-module</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.12.1</version>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>1.5.5.Final</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<!--<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<proguardVersion>7.1.1</proguardVersion>
					<injar>${project.build.finalName}.jar</injar>
					<outjar>${project.build.finalName}.jar</outjar>
					<obfuscate>true</obfuscate>
					<options>
						<option>-dontshrink</option>
						<option>-dontoptimize</option>

						&lt;!&ndash; 此选项将用新的类名替换反射方法调用中的所有字符串。例如，调用Class.forName('className') &ndash;&gt;
						<option>-adaptclassstrings</option>

						&lt;!&ndash; 此选项将保存所有原始注解等。否则，将从文件中删除所有注解。 &ndash;&gt;
						<option>-keepattributes
							Exceptions,
							InnerClasses,
							Signature,
							Deprecated,
							SourceFile,
							LineNumberTable,
							*Annotation*,
							EnclosingMethod
						</option>

						&lt;!&ndash; 此选项将保存接口中的所有原始名称（不混淆） &ndash;&gt;
						<option>-keepnames interface **</option>

						&lt;!&ndash; 此选项将将所有原始方法参数 &ndash;&gt;
						<option>-keepparameternames</option>

						&lt;!&ndash; 此选项将保存所有原始类文件（不混淆），一般是混淆领域或者服务包中的文件。 &ndash;&gt;
						<option>-keep
							class com.waylau.proguard.ProguardMavenPluginSpringBootExampleApplication {
							public static
							void main(java.lang.String[]);
							}
						</option>

						&lt;!&ndash; 此选项忽略警告，例如重复的类定义和命名不正确的文件中的类 &ndash;&gt;
						<option>-ignorewarnings</option>

						&lt;!&ndash; 此选项将保存服务包中的所有原始类文件（不进行混淆） &ndash;&gt;
						&lt;!&ndash; <option>-keep class com.waylau.proguard.service { *; }</option> &ndash;&gt;

						&lt;!&ndash; 此选项将保存所有软件包中的所有原始接口文件（不进行混淆） &ndash;&gt;
						<option>-keep interface * extends * { *; }</option>

						&lt;!&ndash; 此选项将保存所有包中所有类中的所有原始定义的注解 &ndash;&gt;
						<option>-keep class com.fasterxml.jackson.** { *; }</option>
						<option>-keep class org.json.JSONObject.** {**
							put(java.lang.String,java.util.Map);}</option>
						<option>-keepclassmembers class * {
							@org.springframework.context.annotation.Bean *;
							@org.springframework.beans.factory.annotation.Autowired *;
							@org.springframework.beans.factory.annotation.Value *;
							}

						</option>

						<option>-dontwarn com.fasterxml.jackson.databind.**</option>
						<option>-dontwarn com.fasterxml.jackson.**</option>

					</options>
					<injarNotExistsSkip>true</injarNotExistsSkip>
					<libs>
						&lt;!&ndash;在此添加需要的类库 &ndash;&gt;
						&lt;!&ndash;<lib>${java.home}/lib/rt.jar</lib> &ndash;&gt;
					</libs>

				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.guardsquare</groupId>
						<artifactId>proguard-base</artifactId>
						<version>7.1.1</version>
					</dependency>
				</dependencies>
			</plugin>-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<mainClass>com.techhipsters.SpringApplication
							</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
